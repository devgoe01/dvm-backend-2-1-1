# Generated by Django 4.2.20 on 2025-03-21 08:57

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('passenger', 'Passenger'), ('admin', 'Administrator')], default='passenger', max_length=10)),
                ('wallet_balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('email', models.EmailField(max_length=254, unique=True)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Bus',
            fields=[
                ('bus_number', models.AutoField(primary_key=True, serialize=False)),
                ('departure_time', models.DateTimeField()),
                ('base_fare_per_hour', models.DecimalField(decimal_places=2, max_digits=6)),
                ('days_of_week_running', multiselectfield.db.fields.MultiSelectField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday'), ('Sunday', 'Sunday')], default='Monday', max_length=56)),
            ],
        ),
        migrations.CreateModel(
            name='BusInstance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('departure_time', models.DateTimeField()),
                ('bus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bus_instances', to='bus.bus')),
            ],
        ),
        migrations.CreateModel(
            name='BusRoute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='BusSeatClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_seats', models.PositiveIntegerField()),
                ('fare_multiplier', models.DecimalField(decimal_places=2, default=1.0, max_digits=4)),
                ('bus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.bus')),
            ],
        ),
        migrations.CreateModel(
            name='Otps',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otp_code', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('otp_resend_attempts', models.PositiveIntegerField(default=0)),
                ('email', models.EmailField(max_length=254)),
                ('is_verified', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='RouteStop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField()),
                ('duration_to_next_stop', models.DurationField(blank=True, null=True)),
                ('bus_route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.busroute')),
            ],
            options={
                'ordering': ['bus_route', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Seatclass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Stop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Waitlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seats_requested', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Fulfilled', 'Fulfilled')], default='Pending', max_length=20)),
                ('bus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.businstance')),
                ('end_stop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='waitlist_end', to='bus.routestop')),
                ('seat_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.busseatclass')),
                ('start_stop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='waitlist_start', to='bus.routestop')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Seat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seat_number', models.CharField(max_length=10)),
                ('bus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seats', to='bus.bus')),
                ('seat_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.busseatclass')),
            ],
            options={
                'unique_together': {('bus', 'seat_number')},
            },
        ),
        migrations.AddField(
            model_name='routestop',
            name='stop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.stop'),
        ),
        migrations.AddField(
            model_name='busseatclass',
            name='seat_class',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bus_seat_classes', to='bus.seatclass'),
        ),
        migrations.AddField(
            model_name='busroute',
            name='stops',
            field=models.ManyToManyField(related_name='bus_routes', through='bus.RouteStop', to='bus.stop'),
        ),
        migrations.AddField(
            model_name='bus',
            name='route',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buses', to='bus.busroute'),
        ),
        migrations.AddField(
            model_name='bus',
            name='seat_classes',
            field=models.ManyToManyField(related_name='buses', through='bus.BusSeatClass', to='bus.seatclass'),
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_time', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('Confirmed', 'Confirmed'), ('Cancelled', 'Cancelled')], default='Confirmed', max_length=20)),
                ('bus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='bus.businstance')),
                ('end_stop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='booking_end', to='bus.routestop')),
                ('seats', models.ManyToManyField(blank=True, to='bus.seat')),
                ('start_stop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='booking_start', to='bus.routestop')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='can_change_buses',
            field=models.ManyToManyField(blank=True, related_name='editable_by', to='bus.bus'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AlterUniqueTogether(
            name='routestop',
            unique_together={('bus_route', 'stop', 'order')},
        ),
        migrations.AlterUniqueTogether(
            name='busseatclass',
            unique_together={('bus', 'seat_class')},
        ),
    ]
